{"version":3,"sources":["components/GlobalStyle.js","components/AboutMe.js","util/commFunction.js","images/lilac-bg.jpg","components/Header.js","components/Works.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","IntroduceLinkWrapper","styled","div","AboutMe","Section","className","TextWrapper","class","href","target","rel","SkillWraper","SkillText","section","delayletter","Promise","resolve","setTimeout","delayWord","mainKeywordArray","Header","mainKeyWord","useRef","ImgBackGroundRef","useState","startX","setStartX","startY","setStartY","bgPosX","setBgPosX","bgPosY","setBgPosY","movePosX","setMovePosX","movePosY","setMovePosY","useEffect","mainKeyword","current","keywordAnimation","a","loopCount","textSplit","count","reduce","acc","obj","push","split","concat","length","append","textContent","onMouseEnter","useCallback","e","currentTarget","style","transition","clientX","clientY","offsetTop","offsetLeft","onMouseMove","left","top","onMouseOut","Main","Img","ref","img","Myimg","SpanMainKeyWord","a11yHidden","main","props","span","css","Works","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e39060a5.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    \r\n    body {\r\n        -webkit-transition: all 1s;\r\n        transition: all 1s;\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        letter-spacing: -0.025rem;\r\n        font-family: 'Nanum Gothic', sans-serif;\r\n    }\r\n\r\n    body.active {\r\n        overflow: hidden;\r\n        -ms-overflow-style: none;\r\n        /* IE and Edge */\r\n        scrollbar-width: none;\r\n        /* Firefox */\r\n    }\r\n\r\n    body.active::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    h1, h2, h3, h4, h5, h6, ul, ol, li, dl, dt, dd, p, table {\r\n        margin: 0;\r\n        padding: 0\r\n    }\r\n`\r\n\r\nexport default GlobalStyle;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// http://jsfiddle.net/xwmWK/\r\n// hover before transition\r\nconst IntroduceLinkWrapper = styled.div`\r\n    margin-top: 50px;\r\n    position: relative;\r\n    \r\n     & a {\r\n        display: inline-block;\r\n        color: #514862;\r\n        border: 2px solid #514862;\r\n        border-radius: 50px;\r\n        padding: 15px 30px;\r\n        \r\n        text-decoration: none;\r\n\r\n        overflow: hidden; \r\n        position: relative;\r\n\r\n        &::before{\r\n            content: '';\r\n            background: #a2a1dc;\r\n            z-index: -1;\r\n\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 0px;\r\n            height: 100%;\r\n\r\n            transition: all .7s;\r\n            opacity: 0.5;\r\n        }\r\n        &:hover{\r\n            font-weight: 800;\r\n\r\n            &::before{\r\n                content: '';\r\n                width: 100%;\r\n                background: #a2a1dc;\r\n            }\r\n        }\r\n\r\n        & + a {\r\n            margin-left: 5px;\r\n        }\r\n     }\r\n`;\r\n\r\nfunction AboutMe() {\r\n    return (\r\n        <Section>\r\n            <div className='wrap-1200 common-group'>\r\n                <h2>\r\n                    <span><b>ABOUT</b> ME</span>\r\n                </h2>\r\n                <TextWrapper className='introduce-text-wrap'>\r\n                    <p class=\"introduce-title\">안녕하세요 :D</p>\r\n\r\n                    <p>\r\n                        '깊이 생각하는', '끈기있게 탐구하는', '문서화를 좋아하는'<br />\r\n                        프론트엔드 개발자 오세현입니다\r\n                    </p>\r\n\r\n                    <p>\r\n                        저는 프론트엔드 개발자로 현업 경험이 있습니다.<br />\r\n                        각 포지션에 있어서 업무 시, UI 개발에 대한 궁금증,<br />\r\n                        서버와 통신하는 부분의 궁금증이 꼬리를 물고<br />\r\n                        단순히 호기심에서 그치지 않고 공부를 하고 알아감으로서<br />\r\n                        프론트엔드 개발자로 도전할 수 있는 계기가 되었습니다.<br />\r\n                        <br /><br />\r\n                        사용자가 사용하기 편리한 웹서비스를 만들어<br />\r\n                        사람들에게 도움을 주고싶습니다.<br /><br />\r\n\r\n                        그러기 위해 구성원으로써 능동적으로 의견을 내고,<br />\r\n                        동료들의 의견을 들어주고 같이 협력할 수 있는 일원이 되길 희망합니다.<br />\r\n                    </p>\r\n\r\n                    <IntroduceLinkWrapper>\r\n                        <a\r\n                            href=\"http://www.naver.com\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer noopener\"\r\n                        >\r\n                            이력서 바로가기\r\n                        </a>\r\n                        <a\r\n                            href=\"https://github.com/oshosh\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer noopener\"\r\n                        >\r\n                            GitHub 바로가기\r\n                        </a>\r\n                    </IntroduceLinkWrapper>\r\n                </TextWrapper>\r\n\r\n                <SkillWraper className='skill-text-wrap' >\r\n                    <SkillText>\r\n                        <strong>Markup</strong>\r\n                        <p>스킬스킬스킬스킬스킬</p>\r\n                    </SkillText>\r\n                    <SkillText>\r\n                        <strong>Markup</strong>\r\n                        <p>스킬스킬스킬스킬스킬</p>\r\n                    </SkillText>\r\n                    <SkillText>\r\n                        <strong>Markup</strong>\r\n                        <p>스킬스킬스킬스킬스킬</p>\r\n                    </SkillText>\r\n                    <SkillText>\r\n                        <strong>Markup</strong>\r\n                        <p>스킬스킬스킬스킬스킬</p>\r\n                    </SkillText>\r\n                    <SkillText>\r\n                        <strong>Markup</strong>\r\n                        <p>스킬스킬스킬스킬스킬</p>\r\n                    </SkillText>\r\n                    <SkillText>\r\n                        <strong>Markup</strong>\r\n                        <p>스킬스킬스킬스킬스킬</p>\r\n                    </SkillText>\r\n                </SkillWraper>\r\n            </div>\r\n        </Section >\r\n    );\r\n}\r\n\r\nexport default AboutMe;\r\n\r\n\r\nconst Section = styled.section`\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    & .wrap-1200{\r\n        max-width: 1200px;\r\n        margin: 0 auto;\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n    }\r\n\r\n    & h2 {\r\n        margin: 50px 0;\r\n        font-weight: 400;\r\n        font-size: 2.2rem;\r\n        text-align: center;\r\n        color: #1d1720;\r\n        flex-basis: 100%;\r\n\r\n        & span {\r\n            display: inline-block;\r\n        }\r\n        \r\n        & span::after{\r\n            content: '';\r\n            display: inline-block;\r\n            width: 80%;\r\n            height: 2px;\r\n            margin: 25px auto 0px;\r\n            background: #a2a1dc;\r\n        }\r\n    }\r\n\r\n`\r\nconst TextWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    flex-basis: 45%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    line-height: 1.6;\r\n\r\n    & p:first-child {\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n        font-size: 1.6rem;\r\n        font-weight: 700;\r\n        color: #514862;\r\n\r\n        &::before{\r\n            content: '';\r\n            display: block;\r\n            width: 250px;\r\n            height: 250px;\r\n            position: absolute;\r\n            background: #a2a1dc;\r\n            z-index: -1;\r\n            transform: translate(-50%, -25%);\r\n            border-radius: 50%;\r\n            opacity: 0.25;\r\n        }\r\n    }\r\n\r\n    & > p:nth-child(2){\r\n        margin-top: 50px;\r\n        font-size: 1.2rem;\r\n        color: #a2a1dc;\r\n\r\n        &::after{\r\n            content: '';\r\n            display: block;\r\n            width: 100px;\r\n            height: 100px;\r\n            position: absolute;\r\n            background: #a2a1dc;\r\n            z-index: -1;\r\n            transform: translate(-150%, -65%);\r\n            border-radius: 50%;\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    & > p:nth-child(3){\r\n        margin-top: 50px;\r\n        color: #555555;\r\n    }\r\n`\r\n\r\nconst SkillWraper = styled.div`\r\n     display: flex;\r\n    flex-flow: row wrap;\r\n    flex-basis: 55%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n`\r\nconst SkillText = styled.div`\r\n    width: 50%;\r\n    box-sizing: border-box;\r\n`","export const delayletter = () => {\r\n    return new Promise((resolve) => setTimeout(resolve, 200));\r\n}\r\nexport const delayWord = () => {\r\n    return new Promise((resolve) => setTimeout(resolve, 1000));\r\n};\r\n","export default __webpack_public_path__ + \"static/media/lilac-bg.f9356c39.jpg\";","import { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { delayletter, delayWord } from '../util/commFunction';\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport Myimg from '../images/lilac-bg.jpg'\r\nimport GlobalStyle from './GlobalStyle';\r\n\r\nconst mainKeywordArray = [\r\n    '깊이 생각하는',\r\n    '끈기있게 탐구하는',\r\n    '문서화를 좋아하는',\r\n];\r\n\r\nfunction Header() {\r\n\r\n    const mainKeyWord = useRef()\r\n    const ImgBackGroundRef = useRef()\r\n\r\n    let [startX, setStartX] = useState(0)\r\n    let [startY, setStartY] = useState(0)\r\n\r\n    let [bgPosX, setBgPosX] = useState(0)\r\n    let [bgPosY, setBgPosY] = useState(0)\r\n\r\n    let [movePosX, setMovePosX] = useState(0)\r\n    let [movePosY, setMovePosY] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const mainKeyword = mainKeyWord.current\r\n\r\n        const keywordAnimation = async (loopCount = 0) => {\r\n            let textSplit = [];\r\n            let count = 0;\r\n\r\n            textSplit = mainKeywordArray.reduce((acc, current) => {\r\n                let obj = []\r\n                obj.push(current.split(''))\r\n                acc = acc.concat(obj)\r\n                return acc\r\n            }, [])\r\n\r\n            while (loopCount !== textSplit.length && count < textSplit[loopCount].length) {\r\n                // 글자 노출\r\n                await delayletter();\r\n                mainKeyword.append(textSplit[loopCount][count]);\r\n\r\n                // 끝나면 초기화\r\n                if (count === textSplit[loopCount].length - 1) {\r\n                    await delayWord();\r\n\r\n                    textSplit.length - 1 === loopCount\r\n                        ? keywordAnimation((loopCount = 0))\r\n                        : keywordAnimation(loopCount + 1);\r\n\r\n                    mainKeyword.textContent = '';\r\n                    return false;\r\n                }\r\n                count++;\r\n            }\r\n        };\r\n\r\n        keywordAnimation();\r\n    }, [])\r\n\r\n    const onMouseEnter = useCallback((e) => {\r\n        e.currentTarget.style.transition = 'none'\r\n        // 시작 좌표\r\n        setStartX(e.clientX)\r\n        setStartY(e.clientY)\r\n\r\n        // background 좌표\r\n        setBgPosX(ImgBackGroundRef.current.offsetTop)\r\n        setBgPosY(ImgBackGroundRef.current.offsetLeft)\r\n    }, [])\r\n\r\n    const onMouseMove = useCallback((e) => {\r\n        setMovePosX(e.clientX - startX);\r\n        setMovePosY(e.clientY - startY);\r\n\r\n        ImgBackGroundRef.current.style.left = `${bgPosX - movePosX / 40}px`;\r\n        ImgBackGroundRef.current.style.top = `${bgPosY - movePosY / 40}px`;\r\n    }, [bgPosX, bgPosY, movePosX, movePosY, startX, startY])\r\n\r\n    const onMouseOut = useCallback((e) => {\r\n        setBgPosX(-100)\r\n        setBgPosY(-100)\r\n        ImgBackGroundRef.current.style.transition = 'all linear 0.3s';\r\n        ImgBackGroundRef.current.style.top = `${bgPosY}px`;\r\n        ImgBackGroundRef.current.style.left = `${bgPosX}px`;\r\n    }, [bgPosX, bgPosY])\r\n\r\n    return (\r\n        <div>\r\n            <GlobalStyle />\r\n            <Main>\r\n                <Img\r\n                    ref={ImgBackGroundRef}\r\n                    img={Myimg}\r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseMove={onMouseMove}\r\n                    onMouseOut={onMouseOut}\r\n                />\r\n                <h1>\r\n                    안녕하세요!&nbsp;\r\n                    <SpanMainKeyWord a11yHidden={true} >\r\n                        {mainKeywordArray}\r\n                    </SpanMainKeyWord>\r\n\r\n                    <SpanMainKeyWord ref={mainKeyWord}></SpanMainKeyWord><br />\r\n                    프론트엔드 개발자 오세현입니다 :D\r\n                </h1>\r\n            </Main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n/* compontents */\r\nconst Main = styled.main`\r\n    font-family: 'Noto Sans KR', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    background: #a2a1dc;\r\n  \r\n    & h1 {\r\n        position: absolute;\r\n        color: #1d1720;\r\n        font-size: 4rem;\r\n        font-weight: 400;\r\n        text-shadow: 0 0 40px #e3d0eb;\r\n        opacity: 0;\r\n        line-height: 1.4;\r\n        text-align: left;\r\n        animation: 0.5s linear 0.5s forwards main-text;\r\n  \r\n        @keyframes main-text {\r\n        0% {\r\n          opacity: 0;\r\n        }\r\n        100% {\r\n          opacity: 1;\r\n        }\r\n      }\r\n    }\r\n  `\r\n//img -> div https://stackoverflow.com/questions/8200204/fit-background-image-to-div\r\nconst Img = styled.div`\r\n    position: absolute;\r\n    top: -100px;\r\n    left: -100px;\r\n    z-index: 0;\r\n    width: calc(100% + 200px);\r\n    height: calc(100% + 200px);\r\n    \r\n    opacity: 0.9;\r\n    transition: all 0.3s linear 0s;\r\n    \r\n    background-image: url(${props => props.img});\r\n    background-size: cover ;\r\n  `\r\n\r\nconst SpanMainKeyWord = styled.span`\r\n    padding-right: 5px;\r\n    font-weight: 600;\r\n    animation: 0.1s linear infinite keyword-typing-effect;\r\n  \r\n    ${props => props.a11yHidden &&\r\n        css`\r\n        overflow: hidden;\r\n        position: absolute;\r\n        width: 1px;\r\n        height: 1px;\r\n        clip: rect(0, 0, 0, 0);\r\n        clip-path: polygon(0 0, 0 0, 0 0);\r\n      `\r\n    }\r\n  \r\n    @keyframes keyword-typing-effect {\r\n      0% {\r\n        border-right: 4px solid transparent;\r\n      }\r\n      100% {\r\n        border-right: 4px solid #1d1720;\r\n      }\r\n    }\r\n  `","import React from 'react';\r\n\r\nfunction Works() {\r\n    return (\r\n        <div>\r\n            Works 입니다.\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Works;","import './App.css';\r\n\r\nimport GlobalStyle from './components/GlobalStyle';\r\n\r\nimport AboutMe from './components/AboutMe';\r\nimport Header from './components/Header';\r\nimport Works from './components/Works';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <AboutMe />\r\n      <Works />\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}