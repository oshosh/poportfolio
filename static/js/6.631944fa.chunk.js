(this.webpackJsonppoportfolio=this.webpackJsonppoportfolio||[]).push([[6],{397:function(e,n,t){e.exports=t(399)()},399:function(e,n,t){"use strict";var r=t(400);function s(){}function i(){}i.resetWarningCache=s,e.exports=function(){function e(e,n,t,s,i,c){if(c!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function n(){return e}e.isRequired=e;var t={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:i,resetWarningCache:s};return t.PropTypes=t,t}},400:function(e,n,t){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},441:function(e,n,t){"use strict";t.r(n);var r,s,i,c,a,o,l,d=t(155),p=t(4),j=t.n(p),h=t(397),b=t.n(h),x=t(79),m=t.p+"static/media/portfolio01.674c77d1.png",f=t.p+"static/media/portfolio02.fc9a0c6c.png",g=t.p+"static/media/portfolio03.708cae36.png",O=t.p+"static/media/portfolio04.25e450ba.png",u=t(21);function k(e){var n=e.workForwardRef,t=Object(p.useRef)(null),r=Object(p.useRef)(null),s=1;Object(p.useEffect)((function(){var e=i(),n=e.slideWrap,t=e.slide,o=r.current;c(s,n),a(t,o);var l=function(e){if(!e.target.classList.contains("slide-button"))return!1;s=parseInt(e.target.textContent,10),d()},d=function(){var e=o.querySelectorAll(".slide-button");e.forEach((function(e){return e.classList.remove("active")})),n.style.cssText="transform: translate(".concat(-165*s,"%, 0); transition: all ").concat("0.5s",";"),e[s-1].classList.add("active")};return o.addEventListener("click",l),d(),function(){return o.removeEventListener("click",l)}}),[]);var i=function(){var e=t.current,n=e.querySelectorAll(".slide"),r=n[n.length-1].cloneNode(!0),s=n[0].cloneNode(!0);return e.insertBefore(r,e.firstChild),e.appendChild(s),{slideWrap:e,slide:n}},c=function(e,n){n.querySelectorAll(".slide").forEach((function(t,r){n.style.cssText="transform: translate(".concat(-165*e,"%, 0);"),t.style.cssText="opacity: 1; transform: translate(".concat(165*r,"%, 0)")}))},a=function(e,n){e.forEach((function(e,t){n.innerHTML+=0===t?'<button class="slide-button active">'.concat(t+1,"</button>"):'<button class="slide-button">'.concat(t+1,"</button>")}))};return Object(u.jsx)(w,{id:"works",ref:n,children:Object(u.jsxs)(v,{children:[Object(u.jsx)("h2",{children:Object(u.jsx)("span",{children:"Works"})}),Object(u.jsxs)(N,{className:"slide-wrap",ref:t,children:[Object(u.jsxs)("div",{className:"slide",children:[Object(u.jsxs)("div",{className:"work-image-wrap",children:[Object(u.jsx)("figure",{children:Object(u.jsx)("img",{src:m,alt:"\ub354\uc874\ube44\uc988\uc628 \uc704\ud558\uace0 \uba54\uc778"})}),Object(u.jsxs)("p",{className:"time",children:[Object(u.jsx)("time",{dateTime:"2019-10",children:"2019. 10"})," ~",Object(u.jsx)("time",{dateTime:"2020-02",children:"2021. 02"})]}),Object(u.jsxs)("p",{className:"topic",children:["\ub354\uc874\ube44\uc988\uc628 Wehago \ud50c\ub7ab\ud3fc ",Object(u.jsx)("br",{}),"Smart AX Web \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uac1c\ubc1c",Object(u.jsx)("br",{})," (\ubc95\uc778\uc870\uc815, \uac1c\uc778\uc870\uc815) \ubc0f \uc720\uc9c0\ubcf4\uc218"]}),Object(u.jsx)(y,{className:"work-link-wrap",children:Object(u.jsx)("a",{href:"https://www.wehago.com/landing/ko/business/",className:"work-link",target:"_blank",rel:"noreferrer noopener",children:"WebSite"})})]}),Object(u.jsxs)(S,{className:"work-text-wrap",children:[Object(u.jsx)(T,{className:"work-text w50p",children:Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"\uac1c\ubc1c \uc124\uba85"}),Object(u.jsx)("p",{children:"\ub354\uc874\ube44\uc988\uc628\uc5d0\uc11c \ub2f7\ub137\uc73c\ub85c \uac1c\ubc1c\ub41c \ud68c\uacc4 \uc194\ub8e8\uc158 Smart A\ub97c Wehago \ud50c\ub7ab\ud3fc React WEB \uc11c\ube44\uc2a4\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc804\ud658\ud558\uc600\uc73c\uba70 \ucd08\uae30 Back-End \uae4c\uc9c0 \ub2f4\ub2f9\ud588\uc5c8\uc73c\ub098 \ucd9c\uc2dc \uc784\ubc15\uc73c\ub85c \uc778\ud55c \uc5ed\ud560 \ubd84\ub9ac\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4."})]})}),Object(u.jsxs)(T,{className:"work-text w50p",children:[Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"My part (Front-End)"}),Object(u.jsxs)("ul",{children:[Object(u.jsx)("li",{children:"1. 380 \uc885 \uc11c\uc2dd \uc911 \ucd1d 40\uac1c\uc758 \uc2e0\uaddc \uba54\ub274 \uac1c\ubc1c"}),Object(u.jsx)("li",{children:"2. 2020\ub144 5\uc6d4 \uae4c\uc9c0 \uc21c\ucc28\uc801\uc73c\ub85c \uc11c\ube44\uc2a4 \uc804\ubd80 \uc624\ud508 \uc774\ud6c4 60\uc885 \uba54\ub274 \uc720\uc9c0\ubcf4\uc218 \uad00\ub9ac"}),Object(u.jsx)("li",{children:"3. Smart AX \ubd80\uc11c \ud1b5\ud569 \uc774\ud6c4 \ud50c\ub7ab\ud3fc \uc0ac\uc5c5 \ubcf8\ubd80\uc5d0\uc11c \ud68c\uacc4, \uc6d0\ucc9c(\uae09\uc5ec) \uc11c\ube44\uc2a4 \ucd94\uac00 \uac1c\ubc1c \ub2f4\ub2f9"})]})]}),Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"Skills"}),Object(u.jsx)("p",{children:"HTML5, CSS3, ES6, ReactJS, PostgreSQL, RESTful API in Django, C#(Winform)"})]})]})]})]}),Object(u.jsxs)("div",{className:"slide",children:[Object(u.jsxs)("div",{className:"work-image-wrap",children:[Object(u.jsx)("figure",{children:Object(u.jsx)("img",{src:f,alt:"OSH \ud3ec\ud2b8\ud3f4\ub9ac\uc624"})}),Object(u.jsxs)("p",{className:"time",children:[Object(u.jsx)("time",{dateTime:"2021-08",children:"2021. 08"})," ~",Object(u.jsx)("time",{dateTime:"2021-09",children:"2021. 09"})]}),Object(u.jsx)("p",{className:"topic",children:"\ubc18\uc751\ud615 \uac1c\uc778 \ud3ec\ud2b8\ud3f4\ub9ac\uc624 \uc0ac\uc774\ud2b8 \uad6c\ud604"}),Object(u.jsxs)(y,{className:"work-link-wrap",children:[Object(u.jsx)("a",{href:"https://oshosh.github.io/poportfolio/",className:"work-link",target:"_blank",rel:"noreferrer noopener",children:"WebSite"}),Object(u.jsx)("a",{href:"https://github.com/oshosh/poportfolio",className:"work-link",target:"_blank",rel:"noreferrer noopener",children:"GitHub"})]})]}),Object(u.jsxs)(S,{className:"work-text-wrap",children:[Object(u.jsxs)(T,{className:"work-text w50p",children:[Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"\uac1c\ubc1c \uc124\uba85"}),Object(u.jsxs)("p",{children:["\ud575\uc2ec\uc801\uc73c\ub85c \ubc18\uc751\ud615, \ud06c\ub85c\uc2a4 \ube0c\ub77c\uc6b0\uc9d5\uc744 \uae30\uc900 \uc810\uc73c\ub85c \uac1c\ubc1c\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ubaa8\ubc14\uc77c \uae30\uc900 768px \uc774\ud558 \ub370\uc2a4\ud2b8\ud0d1 \uae30\uc900 1024px\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ",Object(u.jsx)("br",{}),"\ub610, \uc800\uc758 \ud504\ub85c\ud544\uc744 \ud655\uc778\ud558\uc2dc\uc5b4 CONTACT ME\uc5d0\uc11c \ucc44\uc6a9 \uc774\uba54\uc77c\uc744 \uc804\ub2ec\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]})]}),Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"\uc774\uc288 \uc0ac\ud56d"}),Object(u.jsx)("p",{children:"react-app-polyfill\uc744 \uc801\uc6a9\ud558\uc5ec ie 11\ubc84\uc83c\uc744 \uc9c0\uc6d0\ud558\ub098 \uc774\uc288\uc0ac\ud56d\uc73c\ub85c \uc778\ud55c \uace0\ub3c4\ud654\uac00 \ud544\uc694\ud569\ub2c8\ub2e4."})]})]}),Object(u.jsxs)(T,{className:"work-text w50p",children:[Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"Skills"}),Object(u.jsx)("p",{children:"HTML5, CSS3, ES6, REACT"})]}),Object(u.jsxs)("div",{class:"paragraph",children:[Object(u.jsx)("strong",{children:"library"}),Object(u.jsx)("p",{children:"styled-components, gh-pages, react-hook-form, react-scroll, react-loading, emailjs-com, dotenv, react-daum-postcode"})]})]})]})]}),Object(u.jsxs)("div",{className:"slide",children:[Object(u.jsxs)("div",{className:"work-image-wrap",children:[Object(u.jsx)("figure",{children:Object(u.jsx)("img",{src:g,alt:"Fakegram"})}),Object(u.jsxs)("p",{className:"time",children:[Object(u.jsx)("time",{dateTime:"2021-09",children:"2021. 09"})," ~",Object(u.jsx)("time",{children:"\uc9c4\ud589\uc911"})]}),Object(u.jsx)("p",{className:"topic",children:"Fakegram (SNS \uc0ac\uc774\ud2b8 \uad6c\ud604 - \ubbf8\uc644\uc131)"}),Object(u.jsx)(y,{className:"work-link-wrap",children:Object(u.jsx)("a",{href:"https://github.com/oshosh/Fakegram",className:"work-link",target:"_blank",rel:"noreferrer noopener",children:"GitHub"})})]}),Object(u.jsxs)(S,{className:"work-text-wrap",children:[Object(u.jsxs)(T,{className:"work-text w50p",children:[Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"\uac1c\ubc1c \uc124\uba85"}),Object(u.jsxs)("p",{children:["SSR\uc744 \uae30\ubc18\uc73c\ub85c \ud55c \ub370\uc774\ud130 \ub79c\ub354\ub9c1 \ucd5c\uc801\ud654\ub97c \uae30\ubc18\uc73c\ub85c \ud604\uc7ac \uac1c\uc778 \uc2a4\ud130\ub514\uc6a9 \ubbf8\ub2c8 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. ",Object(u.jsx)("br",{}),"\uae30\ub2a5\uc5d0 \ub9de\ub294 \uc804\uc5ed \ub370\uc774\ud130 \uad00\ub9ac \ubc0f \uc2e4\uc2dc\uac04 \uc18c\ud1b5\uc774 \uac00\ub2a5\ud55c \uacf5\uac04, \ub2e4\uc591\ud55c \ub514\uc790\uc778 \ud504\ub808\uc784\uc6cc\ud06c \uc0ac\uc6a9\ub4f1\uc744 \uc9c0\ud5a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4."]})]}),Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"\uc774\uc288 \uc0ac\ud56d"}),Object(u.jsx)("p",{children:"\uac1c\ubc1c \uc2dc\uc791\uae30\uac04\uc774 \uc5bc\ub9c8 \ub418\uc9c0 \uc54a\uc544 \uc11c\ube44\uc2a4 \uc624\ud508\uae4c\uc9c0 \uc18c\uc694 \ub420 \uc608\uc815\uc785\ub2c8\ub2e4."})]})]}),Object(u.jsxs)(T,{className:"work-text w50p",children:[Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"Skills"}),Object(u.jsx)("p",{children:"HTML5, CSS3, ES6, ANTD, REACT, NEXT, REDUX"})]}),Object(u.jsxs)("div",{class:"paragraph",children:[Object(u.jsx)("strong",{children:"library"}),Object(u.jsxs)("p",{children:["ant-design/icon, styled-components, react-hook-form, @hookform/error-message, redux-saga, redux-actions,  ",Object(u.jsx)("br",{}),"dev-tools, @hookform/resolvers, yup, react-slick, emoji-picker-react"]})]})]})]})]}),Object(u.jsxs)("div",{className:"slide",children:[Object(u.jsxs)("div",{className:"work-image-wrap",children:[Object(u.jsx)("figure",{children:Object(u.jsx)("img",{src:O,alt:"Fakegram"})}),Object(u.jsxs)("p",{className:"time",children:[Object(u.jsx)("time",{dateTime:"2019-01",children:"2019. 01"})," ~",Object(u.jsx)("time",{dateTime:"2019-06",children:"2019. 06"})]}),Object(u.jsx)("p",{className:"topic",children:"\uc778\uc99d\ud0a4\ub97c \ud1b5\ud55c \ubaa8\ub4c8 \uc124\uce58 \uac1c\ubc1c (JCertSoultion)"}),Object(u.jsx)(y,{className:"work-link-wrap",children:Object(u.jsx)("a",{href:"http://www.fusiondata.co.kr/products/jdesktop.php",className:"work-link",target:"_blank",rel:"noreferrer noopener",children:"WebSite"})})]}),Object(u.jsxs)(S,{className:"work-text-wrap",children:[Object(u.jsxs)(T,{className:"work-text w50p",children:[Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"\uac1c\ubc1c \uc124\uba85"}),Object(u.jsx)("p",{children:"NSIS, C#\uc744 \ud1b5\ud55c \uc751\uc6a9\ud504\ub85c\uadf8\ub7a8 \uc124\uce58 \ud328\ud0a4\uc9d5 \uc2a4\ud06c\ub9bd\ud2b8 \uc81c\uc791 \ubc0f \ub77c\uc774\uc120\uc2a4 \uac80\uc99d \uc194\ub8e8\uc158 \uac1c\ubc1c\uc744 \ud558\uc600\uc2b5\ub2c8\ub2e4."})]}),Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"\uae30\ub2a5"}),Object(u.jsxs)("ul",{children:[Object(u.jsx)("li",{children:"1. JKeyGenerator - \uc554\ud638 \ud0a4 \uc81c\uc791"}),Object(u.jsx)("li",{children:"2. JCertServer - \ub77c\uc774\uc120\uc2a4 \uac80\uc99d \uc11c\ubc84"}),Object(u.jsx)("li",{children:"3. JCertFileGenerator - \ub77c\uc774\uc120\uc2a4 \ud30c\uc77c \uc0dd\uc131 \ud504\ub85c\uadf8\ub7a8"}),Object(u.jsx)("li",{children:"4. JCertFileChecker - \ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac DLL"})]})]})]}),Object(u.jsx)(T,{className:"work-text w50p",children:Object(u.jsxs)("div",{className:"paragraph",children:[Object(u.jsx)("strong",{children:"Skills"}),Object(u.jsx)("p",{children:"C#(Winform, WCF), PostgreSQL, NSIS"})]})})]})]})]}),Object(u.jsx)(C,{className:"slide-indicator",ref:r})]})})}k.prototype={workForwardRef:b.a.shape({component:b.a.instanceOf(j.a.Component)})};n.default=Object(p.forwardRef)(k);var w=x.d.section(r||(r=Object(d.a)(["\n    height: 900px;\n    margin: 0 auto;\n    background: #f2f2f2;\n    \n    position: relative;\n    overflow: hidden;\n\n    &::before{\n        content: ''; \n        display: block;\n        background: #fff;\n        width: 120%;\n        height: 150px;\n        \n        position: absolute;\n        top: -72px; \n        transform: rotate(3deg);\n    }\n"]))),v=x.d.div(s||(s=Object(d.a)(["\n    max-width: 1200px;\n    margin: 0 auto;\n    height: 900px;\n    display: flex;\n    position: relative;\n\n    & h2 {\n        display: inline-block;\n        font-size: 2.2rem;\n        font-weight: 400;\n        text-align: center;\n        flex-basis: 100%;\n        margin: 50px 0;\n        color: ",";\n\n        & span {\n            display: inline-block;\n        }\n\n        & span:after {\n            ",";\n            margin: 25px auto 0px;\n        }\n    }\n"])),(function(e){return e.theme.colors.titleColor}),(function(e){return e.theme.common.InlineBlockSpanUnderLine})),N=x.d.div(i||(i=Object(d.a)(["\n    position: absolute;\n    top: 30%;\n    width: 100%;\n    padding: 0 20px;\n\n    & .slide::after {\n        content: '';\n        display: block;\n        clear: both;\n    }\n\n    & .slide {\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: flex;\n        width: 100%;\n    }\n\n    & .work-image-wrap {\n        display: flex;\n        flex-direction: column;\n        width: 35%;\n        min-width: 350px;\n        text-align: left;\n    }\n\n    & figure {\n        margin: 0;\n        display: inline-block;\n\n        & img{\n            max-width: 100%;\n        }\n    }\n\n    & .time{\n        font-family: 'Noto Sans KR', sans-serif;\n        margin-top: 20px ;\n        padding-left: 10px;\n        font-size: 1.12rem;\n        font-weight: 600;\n\n        &::before{\n            content: '\ud83d\udcc5 ';\n        }\n    }\n\n    & .topic{\n        margin-top: 8px;\n        padding-left: 10px;\n        font-size: 0.9rem;\n        font-weight: 400;\n        line-height: 1.34;\n\n        &::before{\n            content: '\ud83d\udea7 ';\n        }\n    }\n\n    @media "," {\n        & .slide {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            margin-top: -100px;\n        }\n\n        & .work-image-wrap {\n            position: relative;\n            left: -15px;\n            \n            width: 70%;\n            min-width: 150px;\n            text-align: center;\n\n            & figure {\n                width: 200px;\n                margin: 0 auto;\n            }\n\n            & p {\n                font-size: 0.9rem;\n            }\n            & p.topic {\n                font-size: 0.85rem;\n            }\n        }\n    }\n"])),(function(e){return e.theme.device.mobile})),y=x.d.div(c||(c=Object(d.a)(["\n    margin-top: 10px;\n    padding-left: 10px;\n\n    & a {\n        display: inline-block;\n        margin-right: 5px;\n        border-bottom: 1px solid #808080;\n        color: #808080;\n        font-size: 1.0rem;\n        text-decoration: none;\n\n        &::before {\n            content: '\ud83d\udd17 ';\n        }\n    }\n"]))),S=x.d.div(a||(a=Object(d.a)(["\n    display: flex;\n    \n    padding-left: 25px;\n    text-align: left;\n    font-size: 1.1rem;\n    line-height: 1.6;\n    /* background: red; */\n    width: 60%;\n    vertical-align: top;\n    word-break: keep-all;\n\n    & strong {\n        display: block;\n        margin-top: 20px;\n        font-size: 1.3rem;\n        color:  ",";\n    }\n\n    & p {\n        margin-top: 7px;\n        font-size: .9rem;\n    }\n\n    & ul {\n        margin-top: 7px;\n        & li {\n            font-size: .9rem;\n            list-style: none;\n        }\n    }\n    @media "," {\n        width: 100%;\n        box-sizing: border-box;\n        padding: 0 15px;\n    }\n"])),(function(e){return e.theme.colors.darkPurple}),(function(e){return e.theme.device.mobile})),T=x.d.div(o||(o=Object(d.a)(["\n    margin-top: 5px;\n    margin: 0 10px;\n    /* background: yellowgreen; */\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    margin-top: 5px;\n    box-sizing: border-box;\n\n    @media "," {\n        margin: 0 15px;\n\n        & .paragraph {\n            & strong {\n                font-size: 1.3rem;\n            }\n\n            & ul {\n                font-size: 0.9rem;\n            }\n\n            & p {\n                font-size: 0.8rem;\n            }\n        }\n    }\n"])),(function(e){return e.theme.device.mobile})),C=x.d.div(l||(l=Object(d.a)(["\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    & .slide-button {\n        width: 25px;\n        height: 25px;\n        margin: 0 5px;\n        border-radius: 50%;\n        font-size: 1.3rem;\n        color: #ffffff;\n        background: ",";\n        outline: 0;\n        border: 0;\n        text-align: center;\n        \n        &.active {\n        background: ",";\n        }\n    }\n"])),(function(e){return e.theme.colors.purple}),(function(e){return e.theme.colors.darkPurple}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,